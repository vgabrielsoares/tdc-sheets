<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.20.xsd">

    <!-- Changeset: Inserção de características de arquetipos -->
    <changeSet id="012-insert-caracteristicas-arquetipo" author="tdc-sheets">
        <comment>Inserção de características de arquetipos</comment>
        
        <loadData
            file="db/data/arquetipos/caracteristicas_arquetipo.csv"
            separator=","
            tableName="caracteristica_arquetipo">
            <column name="nome" type="STRING"/>
            <column name="arquetipo_nome" header="arquetipo_nome"/>
            <column name="descricao" type="STRING"/>
            <column name="nivel" type="NUMERIC"/>
        </loadData>
        
        <sql>
            UPDATE caracteristica_arquetipo
            SET arquetipo_id = (SELECT id FROM arquetipo WHERE nome = caracteristica_arquetipo.arquetipo_nome)
            WHERE arquetipo_id IS NULL;
            
            ALTER TABLE caracteristica_arquetipo DROP COLUMN IF EXISTS arquetipo_nome;
        </sql>
        
        <rollback>
            DELETE FROM caracteristica_arquetipo;
        </rollback>
    </changeSet>
    
    <!-- Changeset: Inserção de proficiências de arquetipos -->
    <changeSet id="012-insert-proficiencias-arquetipo" author="tdc-sheets">
        <comment>Inserção das proficiências de arquetipos</comment>
        
        <loadData
            file="db/data/arquetipos/proficiencias_arquetipo.csv"
            separator=","
            tableName="proficiencias_arquetipo">
            <column name="arquetipo_nome" header="arquetipo_nome"/>
            <column name="proficiencia" type="STRING"/>
        </loadData>
        
        <sql>
            UPDATE proficiencias_arquetipo
            SET arquetipo_id = (SELECT id FROM arquetipo WHERE nome = proficiencias_arquetipo.arquetipo_nome)
            WHERE arquetipo_id IS NULL;
            
            ALTER TABLE proficiencias_arquetipo DROP COLUMN IF EXISTS arquetipo_nome;
        </sql>
        
        <rollback>
            DELETE FROM proficiencias_arquetipo;
        </rollback>
    </changeSet>
    
    <!-- Changeset: Inserção de habilidades de arquetipos -->
    <changeSet id="012-insert-habilidades-arquetipo" author="tdc-sheets">
        <comment>Inserção de habilidades de arquetipos</comment>
        
        <loadData
            file="db/data/arquetipos/habilidades_arquetipo.csv"
            separator=","
            tableName="habilidades_arquetipo">
            <column name="arquetipo_nome" header="arquetipo_nome"/>
            <column name="pericia" header="pericia"/>
        </loadData>
        
        <sql>
            UPDATE habilidades_arquetipo ha
            SET 
                arquetipo_id = (SELECT id FROM arquetipo WHERE nome = ha.arquetipo_nome),
                habilidade_id = (SELECT h.id FROM habilidade h WHERE h.pericia = ha.pericia)
            WHERE ha.arquetipo_id IS NULL AND ha.habilidade_id IS NULL;
            
            ALTER TABLE habilidades_arquetipo DROP COLUMN IF EXISTS arquetipo_nome;
            ALTER TABLE habilidades_arquetipo DROP COLUMN IF EXISTS pericia;
        </sql>
        
        <rollback>
            DELETE FROM habilidades_arquetipo;
        </rollback>
    </changeSet>
    
    <!-- Changeset: Inserção de requisitos de classe -->
    <changeSet id="012-insert-requisitos-classe" author="tdc-sheets">
        <comment>Inserção de requisitos para classes</comment>
        
        <!-- Inserção de requisitos de classe -->
        <loadData
            file="db/data/classes/requisitos_classe.csv"
            separator=","
            tableName="requisitos_classe">
            <column name="classe_nome" header="classe_nome"/>
            <column name="nivel_minimo" type="NUMERIC"/>
            <column name="primeiro_arquetipo" type="STRING"/>
            <column name="primeiro_arquetipo_nivel" type="NUMERIC"/>
        </loadData>
        
        <sql>
            UPDATE requisitos_classe
            SET classe_id = (SELECT id FROM classe WHERE nome = requisitos_classe.classe_nome)
            WHERE classe_id IS NULL;
            
            ALTER TABLE requisitos_classe DROP COLUMN IF EXISTS classe_nome;
        </sql>
        
        <rollback>
            DELETE FROM requisitos_classe;
        </rollback>
    </changeSet>
    
    <!-- Changeset: Inserção de proficiências de classe -->
    <changeSet id="012-insert-proficiencias-classe" author="tdc-sheets">
        <comment>Inserção de proficiências de classe</comment>
        
        <loadData
            file="db/data/classes/proficiencias_classe.csv"
            separator=","
            tableName="proficiencias_classe">
            <column name="classe_nome" header="classe_nome"/>
            <column name="proficiencia" type="STRING"/>
        </loadData>
        
        <sql>
            UPDATE proficiencias_classe
            SET classe_id = (SELECT id FROM classe WHERE nome = proficiencias_classe.classe_nome)
            WHERE classe_id IS NULL;
            
            ALTER TABLE proficiencias_classe DROP COLUMN IF EXISTS classe_nome;
        </sql>
        
        <rollback>
            DELETE FROM proficiencias_classe;
        </rollback>
    </changeSet>
    
    <!-- Changeset: Associação de classes de feitiço aos feitiços -->
    <changeSet id="012-insert-classes-feitico" author="tdc-sheets">
        <comment>Inserção de associações entre feitiços e suas classes</comment>
        
        <loadData
            file="db/data/feiticos/classes_feitico_patterns.csv"
            separator=","
            tableName="classes_feitico_temp">
            <column name="feitico_pattern" type="STRING"/>
            <column name="classe_feitico" type="STRING"/>
        </loadData>
        
        <sql>
            -- Criar tabela temporária se não existir
            CREATE TABLE IF NOT EXISTS classes_feitico_temp (
                feitico_pattern VARCHAR(255),
                classe_feitico VARCHAR(50)
            );
            
            -- Associar feitiços baseados nos padrões de nome
            INSERT INTO classes_feitico (feitico_id, classe_feitico)
            SELECT f.id, ct.classe_feitico
            FROM feiticos f, classes_feitico_temp ct
            WHERE f.nome LIKE ct.feitico_pattern
            AND NOT EXISTS (
                SELECT 1 FROM classes_feitico cf 
                WHERE cf.feitico_id = f.id AND cf.classe_feitico = ct.classe_feitico
            );
            
            -- Limpar tabela temporária
            DROP TABLE IF EXISTS classes_feitico_temp;
        </sql>
        
        <rollback>
            DELETE FROM classes_feitico;
        </rollback>
    </changeSet>
</databaseChangeLog>
